// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
// swift-module-flags: -target arm64-apple-ios12.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name SenseOS
// swift-module-flags-ignorable: -enable-bare-slash-regex
import AVFoundation
import AdSupport
import AppTrackingTransparency
import CallKit
import SystemConfiguration.CaptiveNetwork
import CommonCrypto
import Contacts
import CoreBluetooth
import CoreGraphics
import CoreLocation
import CoreTelephony
import CryptoKit
import Darwin
import DeviceActivity
import ExternalAccessory
import Foundation
import LocalAuthentication
import MachO
import MapKit
import MediaPlayer
import MessageUI
import Network
import NetworkExtension
import ObjectiveC
import Photos
import Security
@_exported import SenseOS
import Swift
import SystemConfiguration
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public func screenSize() -> Swift.String?
@objc public protocol SenseOSDelegate {
  @objc func onFailure(message: Swift.String)
  @objc func onSuccess(data: Swift.String)
}
@objc @_inheritsConvenienceInitializers public class SenseOS : ObjectiveC.NSObject {
  public func initializeLocationManager()
  public static func initSDK(senseConfig: SenseOS.SenseOSConfig?, withDelegate: (any SenseOS.SenseOSDelegate)?)
  public static func getSenseDetails(withDelegate: (any SenseOS.SenseOSDelegate)?)
  @objc override dynamic public init()
  @objc deinit
}
@_hasMissingDesignatedInitializers public class DeviceDetail {
  public func getDeviceDetail() -> Swift.Dictionary<Swift.String, Any>
  public func getScreen() -> Swift.Dictionary<Swift.String, Any>
  public func getMedia() -> Swift.Dictionary<Swift.String, Any>
  public func getBattery() -> Swift.Dictionary<Swift.String, Any>
  public func getZone() -> Swift.Dictionary<Swift.String, Any>
  public func getConnection(networkType: Any) -> Swift.Dictionary<Swift.String, Any>
  @objc deinit
}
public class SenseOSConfig {
  public var allowGeoLocation: Swift.Bool?
  public init()
  @objc deinit
}
